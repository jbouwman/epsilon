name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/epsilon-ci:latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build and run tests
      run: |
        chmod +x run.sh
        ./run.sh build epsilon.core
        ./run.sh test epsilon.core --format junit

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: success() || failure()
      with:
        report_paths: '**/TEST-epsilon.xml'

    - name: Test runtime build
      run: |
        chmod +x scripts/build-runtime.sh
        ./scripts/build-runtime.sh
        
        # Test the built runtime
        mkdir -p test-runtime
        cd test-runtime
        tar -xzf ../target/epsilon-*.tar.gz
        ./epsilon --eval "(format t \"~%CI test successful!~%\")" --eval "(sb-ext:quit)"

  test-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache SBCL installation
      id: cache-sbcl
      uses: actions/cache@v4
      with:
        path: /opt/homebrew/bin/sbcl
        key: ${{ runner.os }}-sbcl-${{ hashFiles('**/Brewfile', '**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-sbcl-

    - name: Install SBCL
      if: steps.cache-sbcl.outputs.cache-hit != 'true'
      run: |
        brew install sbcl

    - name: Build and run tests
      run: |
        chmod +x run.sh
        ./run.sh build epsilon.core
        ./run.sh test epsilon.core

    - name: Test runtime build
      run: |
        chmod +x scripts/build-runtime.sh
        ./scripts/build-runtime.sh
        
        # Test the built runtime
        mkdir -p test-runtime
        cd test-runtime
        tar -xzf ../target/epsilon-*.tar.gz
        ./epsilon --eval "(format t \"~%CI test successful!~%\")" --eval "(sb-ext:quit)"

  test-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache SBCL installation
      id: cache-sbcl-win
      uses: actions/cache@v4
      with:
        path: C:\Program Files\Steel Bank Common Lisp
        key: ${{ runner.os }}-sbcl-2.4.0
        restore-keys: |
          ${{ runner.os }}-sbcl-

    - name: Install SBCL
      if: steps.cache-sbcl-win.outputs.cache-hit != 'true'
      run: |
        choco install sbcl

    - name: Build and run tests
      run: |
        ./run.sh build epsilon.core
        ./run.sh test epsilon.core

    - name: Test runtime build
      run: |
        scripts/build-runtime.sh
        
        # Test the built runtime
        mkdir test-runtime
        cd test-runtime
        unzip ../target/epsilon-*.zip
        ./epsilon.exe --eval "(format t \"~%CI test successful!~%\")" --eval "(sb-ext:quit)"